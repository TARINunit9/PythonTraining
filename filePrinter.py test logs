Python 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import os
>>> print(os.getcwd())
#[[redacted]]
>>> path = #[[redacted]]
>>> os.chdir(path)
>>> database = os.getcwd()
>>> print(database)
#[[redacted, success]]
>>> print (os.listdir())
['tarin_example_day.pem', 'tarin_example_month.pem', 'tarin_example_year.pem']
>>> bufferOne = open("tarin_example_day.pem")
>>> print(bufferOne.read())
-----BEGIN CERTIFICATE-----
MIIFazCCA1OgAwIBAgIULneJQQxLPysYFHp+eRZ+G5U0vrAwDQYJKoZIhvcNAQEL
BQAwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoM
GEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDAeFw0yNDAzMjExNTQ4MzRaFw0yNDAz
MjIxNTQ4MzRaMEUxCzAJBgNVBAYTAkFVMRMwEQYDVQQIDApTb21lLVN0YXRlMSEw
HwYDVQQKDBhJbnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQwggIiMA0GCSqGSIb3DQEB
AQUAA4ICDwAwggIKAoICAQDKb3TS6kTLwyhIgOh/bcEPNodG5FCN6aKedj7dLpsq
3x5QIt04fy7pNa8YkdzLPNkqvTGVP0QGyhLTMv8oD0izuY1tAMBP277JOjFBL0hY
bJd4I3iuGArgqdzBamFuNOZJK+TELKuAcO/j6CgfYB8LcK+Erj4fIV0CbGBSWkw5
JR9coXL87DkB8K52DNfKiPP+6C9yXL55fpZSQIShswXo2hUr9ZwxYnIa+IkFpZdR
sNHUUh+/IRq3VDWNAtRcj3ysT8AbuJs1U0qv6OOtYaJk3JcJvHiD84GtEJcmm1nl
UiY6PDLHT37gjj5bl/di9bWxkd1+jOJqMuMl4ZDbqxFHp7JDf3Xcg5KsLHtIjRq9
ZwP84rSaT4IC2jq8qTvswQ0UxWmg91fgQJWEjJ1Q5STcs3wLsNfJPXpiZkXTj30K
WKZkrQtp360W6tvYHUSx+Nw1HU3Q0gBO7bfan/KRK4VMUDyTQ+O6A6SRcIr9mkaQ
fW1sbqxlfpw6m9INv7TbTzAgDXzsN6mKY5EBSqi92n6A3gmT09O3cDCKF3tLNysD
S6BFNw5JAGvlNhm4JIxbGSYvpVu5xDmiHhq6bCLjUWsilGk27xzArm3LYeMricqQ
aOOeVCOeCIRxOzxBjJx1e/QV6ABRdKxhos3VaMg8r9VEwJ2OgApJZHGhdQk6EE//
4QIDAQABo1MwUTAdBgNVHQ4EFgQU8v1T8uuP8oDlv7vqiirg7NVS64UwHwYDVR0j
BBgwFoAU8v1T8uuP8oDlv7vqiirg7NVS64UwDwYDVR0TAQH/BAUwAwEB/zANBgkq
hkiG9w0BAQsFAAOCAgEAnoV0EmrEPul1O2oeQ+us9pVfUfhK2ZBo4Eyh+dkTpCqk
lzF1IZwIM5M3fpeg4a4e65Y3jxeIm8ReFt1CWYGOAAOLY7eLVqwlLOcaiUAhoHUb
IRw9DalCgv1OBlsruqL7d+d3xL5mNxu0uJSv2WJ7VlYPKcWt1xJ8BbkOBVQWwDWr
tkQTtvxDpRNoHjWFxd1+hVnJi5nFVPQ+gsgtRoVU+MKsuTOFF3nYn/uNzyK8lzVa
r/ClNQtNAFqhSOarC/NYSujar+8ZlU30BqWp0KcXpfwGnX83RyzQRGiEgdkgcFGp
rX+5g5KXy8yAqSOMSd40cEieDlooWlvV77CB1ys8IZ/t35TCF2raeHV29MAM5eOC
wXrl/MDiT8s8kRDWHDUpY+tLgSE6QGIqzcRtYVkEt+1qYZLwERtHR5X2KlziSauk
G567zwG5wLQ6kdjHz3y+Jhr2x5jdRCYyWZoAVuDUbrwh5Dh0VonCuzi7zk8KLDUt
qYAfx+mCdzx/aHe7XgeBy6ek6yapH1rnmwaIXeeOYZXY1XCZlpVEOJZ+JxVuvTnR
22NiT1a6eGZCZbpFDVvD8Kc0ItyOSYgipLB/Gqa+WGs4dIuBa3ZYiAS4WW44mM+0
DDi5IWYDij8yXl0Lf0tN376H+vc5O6VelsdUqsmcQ3zGICEXUbGO8IeFF/QSKUQ=
-----END CERTIFICATE-----

>>> bufferOne.close()
>>> import cryptography
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ModuleNotFoundError: No module named 'cryptography'
>>> databaseLocation = os.listdir()
>>> for file in os.listdir(os.getcwd()):
... if file.endswith(".pem"):
  File "<stdin>", line 2
    if file.endswith(".pem"):
    ^
IndentationError: expected an indented block after 'for' statement on line 1
>>> for file in os.listdir():\
...     print(file)
...
tarin_example_day.pem
tarin_example_month.pem
tarin_example_year.pem


Python 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import os
>>> path = #[[redacted]]
>>> os.chdir(path)
>>> print(os.getcwd())
#[[redacted, success]]
>>> print (os.listdir())
['filePrinter.py', 'tarin_example_day.pem', 'tarin_example_month.pem', 'tarin_example_year.pem']
>>> exec(open("filePrinter.py").read())
tarin_example_day.pem
-----BEGIN CERTIFICATE-----
MIIFazCCA1OgAwIBAgIULneJQQxLPysYFHp+eRZ+G5U0vrAwDQYJKoZIhvcNAQEL
BQAwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoM
GEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDAeFw0yNDAzMjExNTQ4MzRaFw0yNDAz
MjIxNTQ4MzRaMEUxCzAJBgNVBAYTAkFVMRMwEQYDVQQIDApTb21lLVN0YXRlMSEw
HwYDVQQKDBhJbnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQwggIiMA0GCSqGSIb3DQEB
AQUAA4ICDwAwggIKAoICAQDKb3TS6kTLwyhIgOh/bcEPNodG5FCN6aKedj7dLpsq
3x5QIt04fy7pNa8YkdzLPNkqvTGVP0QGyhLTMv8oD0izuY1tAMBP277JOjFBL0hY
bJd4I3iuGArgqdzBamFuNOZJK+TELKuAcO/j6CgfYB8LcK+Erj4fIV0CbGBSWkw5
JR9coXL87DkB8K52DNfKiPP+6C9yXL55fpZSQIShswXo2hUr9ZwxYnIa+IkFpZdR
sNHUUh+/IRq3VDWNAtRcj3ysT8AbuJs1U0qv6OOtYaJk3JcJvHiD84GtEJcmm1nl
UiY6PDLHT37gjj5bl/di9bWxkd1+jOJqMuMl4ZDbqxFHp7JDf3Xcg5KsLHtIjRq9
ZwP84rSaT4IC2jq8qTvswQ0UxWmg91fgQJWEjJ1Q5STcs3wLsNfJPXpiZkXTj30K
WKZkrQtp360W6tvYHUSx+Nw1HU3Q0gBO7bfan/KRK4VMUDyTQ+O6A6SRcIr9mkaQ
fW1sbqxlfpw6m9INv7TbTzAgDXzsN6mKY5EBSqi92n6A3gmT09O3cDCKF3tLNysD
S6BFNw5JAGvlNhm4JIxbGSYvpVu5xDmiHhq6bCLjUWsilGk27xzArm3LYeMricqQ
aOOeVCOeCIRxOzxBjJx1e/QV6ABRdKxhos3VaMg8r9VEwJ2OgApJZHGhdQk6EE//
4QIDAQABo1MwUTAdBgNVHQ4EFgQU8v1T8uuP8oDlv7vqiirg7NVS64UwHwYDVR0j
BBgwFoAU8v1T8uuP8oDlv7vqiirg7NVS64UwDwYDVR0TAQH/BAUwAwEB/zANBgkq
hkiG9w0BAQsFAAOCAgEAnoV0EmrEPul1O2oeQ+us9pVfUfhK2ZBo4Eyh+dkTpCqk
lzF1IZwIM5M3fpeg4a4e65Y3jxeIm8ReFt1CWYGOAAOLY7eLVqwlLOcaiUAhoHUb
IRw9DalCgv1OBlsruqL7d+d3xL5mNxu0uJSv2WJ7VlYPKcWt1xJ8BbkOBVQWwDWr
tkQTtvxDpRNoHjWFxd1+hVnJi5nFVPQ+gsgtRoVU+MKsuTOFF3nYn/uNzyK8lzVa
r/ClNQtNAFqhSOarC/NYSujar+8ZlU30BqWp0KcXpfwGnX83RyzQRGiEgdkgcFGp
rX+5g5KXy8yAqSOMSd40cEieDlooWlvV77CB1ys8IZ/t35TCF2raeHV29MAM5eOC
wXrl/MDiT8s8kRDWHDUpY+tLgSE6QGIqzcRtYVkEt+1qYZLwERtHR5X2KlziSauk
G567zwG5wLQ6kdjHz3y+Jhr2x5jdRCYyWZoAVuDUbrwh5Dh0VonCuzi7zk8KLDUt
qYAfx+mCdzx/aHe7XgeBy6ek6yapH1rnmwaIXeeOYZXY1XCZlpVEOJZ+JxVuvTnR
22NiT1a6eGZCZbpFDVvD8Kc0ItyOSYgipLB/Gqa+WGs4dIuBa3ZYiAS4WW44mM+0
DDi5IWYDij8yXl0Lf0tN376H+vc5O6VelsdUqsmcQ3zGICEXUbGO8IeFF/QSKUQ=
-----END CERTIFICATE-----

tarin_example_month.pem
-----BEGIN CERTIFICATE-----
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
-----END CERTIFICATE-----

tarin_example_year.pem
-----BEGIN CERTIFICATE-----
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
-----END CERTIFICATE-----

>>>
