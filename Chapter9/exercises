#problem 1
for item in celegans_phenotypes:
	print(item)

#problem 2
list(half_lives)

#problem 3
more_whales = []
for item in whales:
	more_whales.append(item + 1)

#tests for the above
Python 3.12.2 (tags/v3.12.2:6abddd9, Feb  6 2024, 21:26:36) [MSC v.1937 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
>>> superList = [1, 2, 3, 4, 5]
>>> list(superList)
[1, 2, 3, 4, 5]
>>> for item in superList:
...     print item
...     
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(...)?
>>> for item in superList:
...     print(item)
... 
1
2
3
4
5
>>> anotherList = []
>>> for item in superList:
...     anotherList.append(item + 1)
... 
>>> list(anotherList)
[2, 3, 4, 5, 6]

#problem 4
>>> alkaline_earth_metals = [[4, 9.012], [12, 24.302], [20, 40.078], [38, 87.62], [56, 137.327], [88, 226]]
>>> for innerList in alkaline_earth_metals:
...     for item in innerList:
...         print(item)
... 
4
9.012
12
24.302
20
40.078
38
87.62
56
137.327
88
226
>>> number_and_weight = []
>>> for innerList in alkaline_earth_metals:
...     for item in innerList:
...         number_and_weight.append(item)
... 
>>> number_and_weight
[4, 9.012, 12, 24.302, 20, 40.078, 38, 87.62, 56, 137.327, 88, 226]

#problem 5
#after bending over backwards to try and parse this I decided to just run the function
>>> mystery_function([[1,2,3], [4,5,6], [7,8,9]])
[[3, 2, 1], [6, 5, 4], [9, 8, 7]]
#mystery_function takes a list of lists, and reverses the order of elements within each sublist without reorganizing the larger list itself

#problem 6
#replace this line:
while text != "quit":
#with this line
while text.lower() != "quit":

#problem 7
total = 0
for item in country_populations:
	total = total + item

#problem 8
for itor in rat_1:
	if rat_1[itor] > rat_2[itor]:
		print("Rat 1 weighed more than Rat 2 on day " + itor)
	else:
		print("Rat 1 weighed less than Rat 2 on day " + itor)

rat1start = rat_1[0]
rat2start = rat_2[0]
rat1end = rat_1[-1]
rat2end = rat_2[-1]
if rat1start > ratrat2start and rat1end > rat2end:
	print("Rat 1 remained heavier than Rat 2")
else:
	print("Rat 2 became heavier than Rat 1")

#problem 9
#i do not trust myself with the "range" function
itor = 33
while itor < 50:
	print(itor)
	itor = itor + 1

#problem 10
itor = 10
printList = []
while itor > 0:
	printList.append(itor)
	itor = itor - 1
print(printList)

#problem 11
result = 0
itor = 2
divisor = 0
while itor < 23:
	result = result + itor
	divisor = divisor + 1
if divisor != 0:
	result = result/divisor

#problem 12
#would replacing the if loop with a while loop solve the problem? let's find out
>>> from typing import List
>>> def remove_neg(num_list: List[float]) -> None:
...     for item in num_list:
...         while item < 0:
...             num_list.remove(item)
... 
>>> remove_neg([1,2,3,-3,6,-1,-3,1])
Traceback (most recent call last):
  File "<pyshell#31>", line 1, in <module>
    remove_neg([1,2,3,-3,6,-1,-3,1])
  File "<pyshell#30>", line 4, in remove_neg
    num_list.remove(item)
ValueError: list.remove(x): x not in list
#nope! that didn't work
#new plan:
>>> from typing import List
>>> def remove_neg(num_list: List[float]) -> None:
...     tempList = []
...     for item in num_list:
...         if item >= 0:
...             tempList.append(item)
...     num_list = tempList
... 
>>> remove_neg([1,2,3,-3,6,-1,-3,1])
#the code is a void function, but it doesn't throw any errors

#problem 13
