#problem 1
#"I think we can just use negative indecies, at least on a cenceptual level. Let's write these out"

from typing import Any
#while loop version
def linearWhileNeg(lst: list, value: Any) -> int:
  i = -1
  listLength = len(lst) * -1
  while i != listLength and lst[i] != value:
    i = i - 1
  if i == listLength:
    return 0
  else:
    return i

  #for loop version
  #spoilers, this first draft is wrong
  def linearForNeg(lst: list, value: Any) -> int:
    i = -1
    for i in range(-1, (len(lst) * -1)):
      if lst[i] == value:
        return i
    return 0

  #sentinel search version
  #this first draft doesn't work either'
  def SentinelNeg(lst: list, value: Any) -> int:
    #insert the value at the, ahem, "end"
    lst.insert((len(lst)*-1), value)
    i = -1
    while lst[i] != value:
      i = i - 1
    lst.remove((len(lst)*-1))
    if i == len(lst)*-1:
      return 0
    else:
      return i

#tests
>>> testList = [1, 2, 3, 4, 5]
>>> linearWhileNeg(testList, 3)
-3
#so far so good
>>> linearForNeg(testList, 3)
0
#looks like the range() function doesn't want to do that'

>>> SentinelNeg(testList, 3)
Traceback (most recent call last):
  File "<pyshell#14>", line 1, in <module>
    SentinelNeg(testList, 3)
  File "<pyshell#13>", line 7, in SentinelNeg
    lst.remove((len(lst)*-1))
ValueError: list.remove(x): x not in list
#ouch, back to the drawoing board
